
buildscript {
  ext {
    queryDslVersion = '5.0.0'
  }
}

plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.5'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.hibernate.orm'
  id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

repositories {
  mavenCentral()
  gradlePluginPortal()
  maven { url = uri("https://repo.spring.io/release") }
}

group = 'com.frolic.sns'
version = '1.2.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
  implementation("org.springframework.boot:spring-boot-starter-data-jpa")
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-security")
  testImplementation("org.springframework.security:spring-security-test")
  developmentOnly("org.springframework.boot:spring-boot-devtools")
  implementation("org.springframework.boot:spring-boot-starter-validation")
  annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
  implementation("org.springframework.boot:spring-boot-starter-aop")
  testImplementation("org.springframework.boot:spring-boot-starter-test")

  compileOnly("org.projectlombok:lombok:1.18.24")
  testCompileOnly("org.projectlombok:lombok:1.18.24")
  annotationProcessor("org.projectlombok:lombok:1.18.24")
  testAnnotationProcessor("org.projectlombok:lombok:1.18.24")

  implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
//  runtimeOnly "org.mariadb.jdbc:mariadb-java-client:2.7.4"

  implementation 'org.springframework.boot:spring-boot-starter-mail'

  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

  implementation("com.querydsl:querydsl-core:${queryDslVersion}")
  implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
  implementation("com.querydsl:querydsl-apt:${queryDslVersion}")
  implementation("com.querydsl:querydsl-sql:${queryDslVersion}")

  implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
  implementation 'org.springdoc:springdoc-openapi-security:1.6.15'

  implementation 'com.twilio.sdk:twilio:9.2.5'

  implementation 'org.mockito:mockito-core:5.2.0'

  implementation 'com.google.code.findbugs:jsr305:3.0.2'

  implementation 'com.amazonaws:aws-java-sdk:1.12.429'
  implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}

test {
  def envFile = file('./conf/spring/.env')
  envFile.eachLine {
    if (it != "") {
      def (key, value) = it.tokenize("=")
      environment(key, value)
    }

  }
  useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
  main.java.srcDir querydslDir
}

compileQuerydsl {
  options.annotationProcessorPath = configurations.querydsl
}

querydsl {
  jpa = true
  querydslSourcesDir = querydslDir
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  querydsl.extendsFrom compileClasspath
}
